{"version":3,"file":"react-router-config.min.js","sources":["../modules/matchRoutes.tsx","../modules/renderRoutes.tsx"],"sourcesContent":["import { Router, matchPath, match } from \"react-router\";\nimport { RouteConfig, MatchedRoute } from \"./types\";\n\nfunction computeRootMatch<Params extends { [K in keyof Params]?: string } = {}>(\n  pathname: string\n): match<Params | {}> {\n  return {\n    path: \"/\",\n    url: \"/\",\n    params: {},\n    isExact: pathname === \"/\",\n  };\n}\n\nfunction matchRoutes<Params extends { [K in keyof Params]?: string } = {}>(\n  routes: RouteConfig[],\n  pathname: string,\n  branch: Array<MatchedRoute<Params | {}>> | undefined = []\n): Array<MatchedRoute<Params | {}>> {\n  routes.some((route) => {\n    const match: match<Params | {}> | null = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n      ? branch[branch.length - 1].match\n      : computeRootMatch(pathname);\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes<Params>(route.routes, pathname, branch);\n      }\n    }\n\n    return match;\n  });\n\n  return branch;\n}\n\nexport default matchRoutes;\n","import React from \"react\";\nimport { Switch, Route, SwitchProps } from \"react-router\";\nimport { RouteComponentProps, Redirect } from \"react-router-dom\";\nimport { RouteConfig } from \"./types\";\n\nfunction generateRoute(route: RouteConfig): RouteConfig {\n  const parentRoute: RouteConfig = { ...route };\n\n  const parentPaths: (string | undefined)[] = Array.isArray(parentRoute.path)\n    ? parentRoute.path\n    : [parentRoute.path];\n\n  if (parentRoute.routes) {\n    parentRoute.routes = parentRoute.routes.map((childRoute) => {\n      const childrenPaths: (string | undefined)[] = Array.isArray(\n        childRoute.path\n      )\n        ? childRoute.path\n        : [childRoute.path];\n\n      const resultPaths: string[] = [];\n\n      // 循环计算此层路由 可能会出现的 path 因为 parent 和 child 都有可能是 [] 多个\n      childrenPaths.forEach((childPath: string) => {\n        parentPaths.forEach((parentPath: string) => {\n          resultPaths.push(\n            `${parentPath.endsWith(\"/\") ? \"\" : parentPath}${childPath}`\n          );\n        });\n      });\n\n      return {\n        ...childRoute,\n        path: resultPaths.length <= 1 ? resultPaths[0] : resultPaths,\n      };\n    });\n  }\n\n  return parentRoute;\n}\n\n// 渲染子路由方法\nfunction renderRoutes(\n  routes: RouteConfig[],\n  extraProps: any | undefined = {},\n  switchProps: SwitchProps | undefined = {}\n): React.ReactNode {\n  return routes ? (\n    <Switch {...switchProps}>\n      {routes.map((_route, index) => {\n        // 计算子路由 parentPath + childPath\n        // 使配置参数可以不需要给出完整路径 该方法会自动计算出\n        const route = generateRoute(_route);\n\n        return (\n          <Route\n            key={route.key || index}\n            path={route.path}\n            exact={route.exact}\n            strict={route.strict}\n            sensitive={route.sensitive}\n            location={route.location}\n            propName={route.propName}\n            render={(props: RouteComponentProps) => {\n              if (route.redirect) {\n                // 重定向 这里的redirect 应该是 完全路径\n                // 因为 在 上级 path是[]时\n                // redirect 应该重定向到数组里的哪个父路由下 其实是比较难确定的\n                // 且如果 由 此层路由 跳往 它层路由 也是实现不了的 故而 是个 完全路径\n                return <Redirect key={index} to={route.redirect} />;\n              } else if (route.component) {\n                if (route.fallback) {\n                  // 如果是 lazyload 组件 需要给出fallback参数以生效lazy效果\n                  return (\n                    <React.Suspense\n                      fallback={route.fallback || <div>loading</div>}\n                    >\n                      <route.component\n                        {...props}\n                        {...extraProps}\n                        route={route}\n                      />\n                    </React.Suspense>\n                  );\n                } else {\n                  return (\n                    <route.component {...props} {...extraProps} route={route} />\n                  );\n                }\n              } else if (route.render) {\n                if (route.fallback) {\n                  // 如果是 lazyload 组件 需要给出fallback参数以生效lazy效果\n                  return (\n                    <React.Suspense\n                      fallback={route.fallback || <div>loading</div>}\n                    >\n                      {route.render({\n                        ...props,\n                        ...extraProps,\n                        route,\n                      })}\n                    </React.Suspense>\n                  );\n                } else {\n                  return route.render({\n                    ...props,\n                    ...extraProps,\n                    route,\n                  });\n                }\n              }\n\n              return null;\n            }}\n          />\n        );\n      })}\n    </Switch>\n  ) : null;\n}\n\nexport default renderRoutes;\n"],"names":["computeRootMatch","pathname","path","url","params","isExact","matchRoutes","routes","branch","some","route","match","matchPath","length","push","generateRoute","parentRoute","parentPaths","Array","isArray","map","childRoute","childrenPaths","resultPaths","forEach","childPath","parentPath","endsWith","renderRoutes","extraProps","switchProps","React","Switch","_route","index","Route","key","exact","strict","sensitive","location","propName","render","props","redirect","Redirect","to","component","fallback","Suspense"],"mappings":"mRAGA,SAASA,iBACPC,SAEO,CACLC,KAAM,IACNC,IAAK,IACLC,OAAQ,GACRC,QAAsB,MAAbJ,GAIb,SAASK,YACPC,EACAN,OACAO,yDAAuD,UAEvDD,EAAOE,KAAK,SAACC,OACLC,EAAmCD,EAAMR,KAC3CU,sBAAUX,EAAUS,GACpBF,EAAOK,OACPL,EAAOA,EAAOK,OAAS,GAAGF,MAC1BX,iBAAiBC,UAEjBU,IACFH,EAAOM,KAAK,CAAEJ,MAAAA,EAAOC,MAAAA,IAEjBD,EAAMH,QACRD,YAAoBI,EAAMH,OAAQN,EAAUO,IAIzCG,IAGFH,+NChCT,SAASO,cAAcL,OACfM,mBAAgCN,GAEhCO,EAAsCC,MAAMC,QAAQH,EAAYd,MAClEc,EAAYd,KACZ,CAACc,EAAYd,aAEbc,EAAYT,SACdS,EAAYT,OAASS,EAAYT,OAAOa,IAAI,SAACC,OACrCC,EAAwCJ,MAAMC,QAClDE,EAAWnB,MAETmB,EAAWnB,KACX,CAACmB,EAAWnB,MAEVqB,EAAwB,UAG9BD,EAAcE,QAAQ,SAACC,GACrBR,EAAYO,QAAQ,SAACE,GACnBH,EAAYT,eACPY,EAAWC,SAAS,KAAO,GAAKD,UAAaD,uCAMjDJ,IACHnB,KAAMqB,EAAYV,QAAU,EAAIU,EAAY,GAAKA,OAKhDP,EAIT,SAASY,aACPrB,OACAsB,yDAA8B,GAC9BC,yDAAuC,UAEhCvB,EACLwB,oBAACC,mBAAWF,EACTvB,EAAOa,IAAI,SAACa,EAAQC,OAGbxB,EAAQK,cAAckB,UAG1BF,oBAACI,mBACCC,IAAK1B,EAAM0B,KAAOF,EAClBhC,KAAMQ,EAAMR,KACZmC,MAAO3B,EAAM2B,MACbC,OAAQ5B,EAAM4B,OACdC,UAAW7B,EAAM6B,UACjBC,SAAU9B,EAAM8B,SAChBC,SAAU/B,EAAM+B,SAChBC,OAAQ,SAACC,UACHjC,EAAMkC,SAKDb,oBAACc,yBAAST,IAAKF,EAAOY,GAAIpC,EAAMkC,WAC9BlC,EAAMqC,UACXrC,EAAMsC,SAGNjB,oBAACA,MAAMkB,UACLD,SAAUtC,EAAMsC,UAAYjB,2CAE5BA,oBAACrB,EAAMqC,sBACDJ,EACAd,GACJnB,MAAOA,MAMXqB,oBAACrB,EAAMqC,sBAAcJ,EAAWd,GAAYnB,MAAOA,KAG9CA,EAAMgC,OACXhC,EAAMsC,SAGNjB,oBAACA,MAAMkB,UACLD,SAAUtC,EAAMsC,UAAYjB,2CAE3BrB,EAAMgC,oDACFC,GACAd,IACHnB,MAAAA,MAKCA,EAAMgC,oDACRC,GACAd,IACHnB,MAAAA,KAKC,WAMf"}