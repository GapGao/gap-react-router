{"version":3,"file":"react-router-config-upgrade.js","sources":["../../modules/matchRoutes.tsx","../../modules/query.ts","../../modules/renderRoutes.tsx","../../modules/index.ts"],"sourcesContent":["import { Router, matchPath, match } from \"react-router\";\nimport { RouteConfig, MatchedRoute } from \"./types\";\n\nfunction computeRootMatch<Params extends { [K in keyof Params]?: string } = {}>(\n  pathname: string\n): match<Params | {}> {\n  return {\n    path: \"/\",\n    url: \"/\",\n    params: {},\n    isExact: pathname === \"/\",\n  };\n}\n\nfunction matchRoutes<Params extends { [K in keyof Params]?: string } = {}>(\n  routes: RouteConfig[],\n  pathname: string,\n  branch: Array<MatchedRoute<Params | {}>> | undefined = []\n): Array<MatchedRoute<Params | {}>> {\n  routes.some((route) => {\n    const match: match<Params | {}> | null = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n      ? branch[branch.length - 1].match\n      : computeRootMatch(pathname);\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes<Params>(route.routes, pathname, branch);\n      }\n    }\n\n    return match;\n  });\n\n  return branch;\n}\n\nexport default matchRoutes;\n","import qs from 'qs';\n\nconst queryMap: { [key: string]: any } = {};\n\nexport default function getQueryParamFromLocation(location: { search: string }) {\n  if (!queryMap[location.search]) {\n    const result = JSON.stringify(qs.parse(location.search.slice(1)));\n    queryMap[location.search] = new Function(`return ${result}`);\n  }\n  return queryMap[location.search]();\n}","import React from \"react\";\nimport { Switch, Route, SwitchProps } from \"react-router\";\nimport { RouteComponentProps, Redirect } from \"react-router-dom\";\nimport { LocationDescriptor } from \"history\";\nimport { RouteConfig, RedirectFunction } from \"./types\";\n\nimport getQueryParamFromLocation from \"./query\";\n\n/**\n * 如果path 以/结尾 或根路由就是 /，那么如果直接拼接\n * 路由会变成 xxx//xxx 所以在此format一下\n * @param path\n */\nfunction formatPath(path: string): string {\n  if (path.endsWith(\"/\")) {\n    return formatPath(path.slice(0, -1));\n  } else {\n    return path;\n  }\n}\n\n/**\n * 判断是否为一个function\n * @param fn\n */\nfunction isFunction(fn: LocationDescriptor | Function): boolean {\n  return Object.prototype.toString.call(fn) === \"[object Function]\";\n}\n\nfunction generateRoute(route: RouteConfig): RouteConfig {\n  const parentRoute: RouteConfig = { ...route };\n\n  const parentPaths: string[] = Array.isArray(parentRoute.path)\n    ? parentRoute.path\n    : parentRoute.path\n    ? [parentRoute.path]\n    : [];\n\n  if (parentRoute.routes) {\n    parentRoute.routes = parentRoute.routes.map((childRoute) => {\n      const childrenPaths: string[] = Array.isArray(childRoute.path)\n        ? childRoute.path\n        : childRoute.path\n        ? [childRoute.path]\n        : [];\n\n      const resultPaths: string[] = [];\n\n      // 循环计算此层路由 可能会出现的 path 因为 parent 和 child 都有可能是 [] 多个\n      childrenPaths.forEach((childPath: string) => {\n        parentPaths.forEach((parentPath: string) => {\n          resultPaths.push(`${formatPath(parentPath)}${childPath}`);\n        });\n      });\n\n      return {\n        ...childRoute,\n        path: resultPaths.length <= 1 ? resultPaths[0] : resultPaths,\n      };\n    });\n  }\n\n  return parentRoute;\n}\n\n// 渲染子路由方法\nfunction renderRoutes(\n  routes: RouteConfig[],\n  extraProps: any | undefined = {},\n  switchProps: SwitchProps | undefined = {}\n): React.ReactNode {\n  return routes ? (\n    <Switch {...switchProps}>\n      {routes.map((_route, index) => {\n        // 计算子路由 parentPath + childPath\n        // 使配置参数可以不需要给出完整路径 该方法会自动计算出\n        const route = generateRoute(_route);\n\n        const {\n          key,\n          path,\n          exact,\n          strict,\n          sensitive,\n          location,\n          redirect,\n          component: Component,\n          fallback,\n          render,\n          ...others\n        } = route;\n        return (\n          <Route\n            key={key || index}\n            path={path}\n            exact={exact}\n            strict={strict}\n            sensitive={sensitive}\n            location={location}\n            {...others}\n            render={(props: RouteComponentProps) => {\n              const extendedProps = {\n                ...props,\n                location: {\n                  ...props.location,\n                  query: getQueryParamFromLocation(\n                    props.location || { search: \"\" }\n                  ),\n                },\n                route,\n              };\n\n              if (redirect) {\n                // 重定向 这里的redirect 应该是 完全路径\n                // 因为 在 上级 path是[]时\n                // redirect 应该重定向到数组里的哪个父路由下 其实是比较难确定的\n                // 且如果 由 此层路由 跳往 它层路由 也是实现不了的 故而 是个 完全路径\n                let to: LocationDescriptor = \"\";\n                if (isFunction(redirect)) {\n                  to = (redirect as RedirectFunction)({\n                    ...extraProps,\n                    ...extendedProps,\n                  });\n                } else {\n                  to = redirect as LocationDescriptor;\n                }\n                return (\n                  // 加了switch 才能在 Route 下 的 Redirect 能传递params\n                  <Switch>\n                    <Redirect from={props.match.path} to={to} />\n                  </Switch>\n                );\n              } else if (Component) {\n                const { location } = props;\n                if (React.Suspense && fallback) {\n                  // 如果是 lazyload 组件 需要给出fallback参数以生效lazy效果\n                  return (\n                    <React.Suspense fallback={fallback || <div>loading</div>}>\n                      <Component {...extraProps} {...extendedProps} />\n                    </React.Suspense>\n                  );\n                } else {\n                  return <Component {...extraProps} {...extendedProps} />;\n                }\n              } else if (render) {\n                if (React.Suspense && fallback) {\n                  // 如果是 lazyload 组件 需要给出fallback参数以生效lazy效果\n                  return (\n                    <React.Suspense fallback={fallback || <div>loading</div>}>\n                      {render({\n                        ...extraProps,\n                        ...extendedProps,\n                      })}\n                    </React.Suspense>\n                  );\n                } else {\n                  return render({\n                    ...extraProps,\n                    ...extendedProps,\n                  });\n                }\n              }\n\n              return null;\n            }}\n          />\n        );\n      })}\n    </Switch>\n  ) : null;\n}\n\nexport default renderRoutes;\n","export {default as matchRoutes} from './matchRoutes';\nexport {default as getQueryParamFromLocation} from './query';\nexport {default as renderRoutes} from './renderRoutes';\n\nexport * from './types';\n\nimport React, {FunctionComponent, ComponentClass} from 'react';\nimport {withRouter as _withRouter, RouteComponentProps, Link, NavLink, HashRouter, BrowserRouter, Router, Route, Redirect, Switch, matchPath, useRouteMatch, useHistory, useLocation, useParams} from 'react-router-dom';\n\nimport getQueryParamFromLocation from './query';\n\nexport function withRouter(Comp: FunctionComponent|\n                           ComponentClass<RouteComponentProps>) {\n  return _withRouter((props) => {\n    const location = props.location;\n    return React.createElement(Comp as any, {\n      ...props,\n      location: {...location, query: getQueryParamFromLocation(location)}\n    });\n  });\n}\n\nexport {\n  Link,\n  NavLink,\n  HashRouter,\n  BrowserRouter,\n  Router,\n  Route,\n  Redirect,\n  Switch,\n  matchPath,\n  useRouteMatch,\n  useHistory,\n  useLocation,\n  useParams\n}"],"names":["computeRootMatch","pathname","path","url","params","isExact","matchRoutes","routes","branch","some","route","match","matchPath","length","push","queryMap","getQueryParamFromLocation","location","search","result","JSON","stringify","qs","parse","slice","Function","formatPath","endsWith","isFunction","fn","Object","prototype","toString","call","generateRoute","parentRoute","parentPaths","Array","isArray","map","childRoute","childrenPaths","resultPaths","forEach","childPath","parentPath","renderRoutes","extraProps","switchProps","Switch","_route","index","key","exact","strict","sensitive","redirect","Component","component","fallback","render","others","Route","props","extendedProps","query","to","Redirect","React","Suspense","withRouter","Comp","_withRouter","createElement"],"mappings":"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"}